{"version":3,"file":"ui.df2b134d.js","sources":["../../js/ui/map.js","../../templates/dynamic/note.hbs?raw","../../js/ui/list.js","../../js/ui/ui.js"],"sourcesContent":["import Leaflet from '../leaflet.js';\nimport { STATUS } from '../query.js';\n\nimport * as Handlebars from 'handlebars';\nimport t from '../../templates/dynamic/comment.hbs?raw';\nconst template = Handlebars.compile(t);\n\nexport default class Map {\n  constructor() {\n    this.map = new Leaflet('map-container');\n    this.container = document.getElementById('note-container');\n\n    this.active = null;\n\n    this.cluster = L.markerClusterGroup({\n      maxClusterRadius: 40,\n      showCoverageOnHover: false\n    });\n    this.map.addLayer(this.cluster);\n    this.markers = [];\n\n    this.halo = L.circleMarker([0, 0]);\n    this.map.addLayer(this.halo);\n\n    this.features = L.geoJSON();\n    this.map.addLayer(this.features);\n\n    this.map.onClick(() => this.clear());\n  }\n\n  /**\n    * Add a note to the marker layer\n    *\n    * @function\n    * @param {Note} note\n    * @param {Query} query\n    * @returns {Promise}\n    */\n  add(note, query) {\n    let color = note.color;\n    if (query.data.status === STATUS.ALL) {\n      color = note.status === STATUS.OPEN ? 'green' : 'red';\n    }\n\n    const marker = L.marker(note.coordinates, {\n      icon: new L.divIcon({\n        html: `<svg class=\"marker ${color}\"><use xlink:href=\"#marker-template\"></use></svg>`,\n        iconSize: [25, 40],// [width, height]\n        iconAnchor: [25 / 2, 40], // [width / 2, height]\n        popupAnchor: [0, -30],\n        className: 'marker-icon'\n      })\n    });\n\n    marker.on('click', () => {\n      if (this.active === note) {\n        return;\n      }\n\n      this.clear();\n      this.active = note;\n\n      this.container.innerHTML = template(note, {\n        allowedProtoProperties: {\n          actions: true,\n          badges: true\n        }\n      });\n\n      setTimeout(() => {\n        this.container.classList.remove('out-of-view');\n      }, 100);\n\n      // Show halo with the correct style at the position of the note\n      this.halo = L.circleMarker(note.coordinates, {\n        color: window.getComputedStyle(document.documentElement).getPropertyValue(`--${color}-primary`),\n        weight: 1\n      });\n      this.map.addLayer(this.halo);\n\n      // If an element is linked in the note text, show the geometry of it on the map\n      const { linked } = note;\n      if (linked) {\n        const overpass = `\n          [out:json];\n          ${linked.type}(id:${linked.id});\n          convert Feature ::=::,::id=id(),::geom=geom();\n          out geom tags;`;\n\n        fetch('https://overpass-api.de/api/interpreter', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: new URLSearchParams({\n            'data': overpass\n          })\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(`Error while fetching Overpass API: ${response.status} ${response.statusText}`);\n          }\n        }).then(json => {\n          if (!('elements' in json) || json.elements.length === 0) {\n            return;\n          }\n\n          const [ element ] = json.elements;\n          // TODO: Points are ignored because they use a similar marker to the other markers by default which might lead to confusion\n          if (element.geometry.type !== 'Point') {\n            this.features.addData(element);\n          }\n        });\n      }\n    });\n\n    this.markers.push(marker);\n  }\n\n  /**\n    * Remove temporary layers from the map and reset values\n    *\n    * @function\n    * @returns {void}\n    */\n  clear() {\n    this.active = null;\n    this.halo.remove();\n    this.features.clearLayers();\n    this.container.classList.add('out-of-view');\n  }\n\n  /**\n    * Display all notes on the map and zoom the map to show them all\n    *\n    * @function\n    * @param {Boolean} reload Indicates that this function has been called by a reload function\n    * @returns {void}\n    */\n  apply(reload) {\n    this.map.resize();\n\n    this.clear();\n    this.cluster.clearLayers();\n    this.cluster.addLayers(this.markers);\n\n    // TODO: Leave this choice to the user by implementing a button which offers to zoom to contain all features\n    if (!reload && this.markers.length > 0) {\n      this.map.flyToBounds(this.cluster.getBounds());\n    }\n\n    this.markers = [];\n  }\n}\n","export default \"<div class=\\\"card\\\" data-note-id=\\\"{{id}}\\\">\\n  <div class=\\\"card-header note-badges\\\">\\n    <div class=\\\"columns col-gapless\\\">\\n      <div class=\\\"column\\\">\\n        {{{badges.user}}}\\n        {{{badges.age}}}\\n        {{{badges.comments}}}\\n        {{{badges.country}}}\\n      </div>\\n      <div class=\\\"column col-auto\\\">\\n        {{{badges.report}}}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card-body text-break\\\">\\n    {{{comments.0.html}}}\\n  </div>\\n\\n  <div class=\\\"card-footer note-actions\\\">\\n    {{> actions actions}}\\n  </div>\\n</div>\\n\"","import * as Handlebars from 'handlebars';\nimport t from '../../templates/dynamic/note.hbs?raw';\nconst template = Handlebars.compile(t);\n\nexport default class List {\n  constructor() {\n    this.fragment = new DocumentFragment();\n  }\n\n  /**\n    * Add a note to the list as a card\n    *\n    * @function\n    * @param {Note} note\n    * @returns {Promise}\n    */\n  add(note) {\n    const div = document.createElement('div');\n    div.classList.add('column', 'col-3', 'col-xl-4', 'col-md-6', 'col-sm-12', 'p-1');\n    div.innerHTML = template(note, {\n      allowedProtoProperties: {\n        actions: true,\n        badges: true\n      }\n    });\n    this.fragment.appendChild(div);\n  }\n\n  /**\n    * Shows all notes\n    *\n    * @function\n    * @todo Use {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/replaceChildren} if this becomes more established\n    *       chrome >= 86, edge >= 86, firefox >= 78, not ie <= 11, opera >= 72, safari >= 14\n    * @returns {void}\n    */\n  apply() {\n    const container = document.getElementById('list');\n    while (container.lastChild) {\n      container.removeChild(container.lastChild);\n    }\n    container.appendChild(this.fragment);\n\n  }\n}\n","import { STATUS } from '../query.js';\nimport MapView from './map.js';\nimport ListView from './list.js';\n\nconst Views = {\n  map: new MapView(),\n  list: new ListView()\n};\n\nexport default class UI {\n  /**\n    * Constructor for controlling the view (e.g. a map or a list)\n    *\n    * @constructor\n    * @param {View} view\n    */\n  constructor(view) {\n    this.notes = [];\n    this.query = null;\n    this.view = view;\n  }\n\n  set view(view) {\n    const values = Object.keys(Views);\n    if (!values.includes(view)) {\n      throw new TypeError(`Argument must be one of ${values.join(', ')}`);\n    }\n    this._view = {\n      name: view,\n      handler: Views[view]\n    };\n    this.reload();\n  }\n\n  get view() {\n    return this._view.name;\n  }\n\n  /**\n    * Delegate the information to all views\n    *\n    * @function\n    * @param {Array} notes\n    * @param {Query} query\n    * @param {Boolean} reload\n    * @returns {Promise}\n    */\n  show(notes, query, reload) {\n    this.query = query;\n    this.notes = notes;\n\n    const amount = notes.length;\n    const average = notes.reduce((accumulator, current) => accumulator + current.created.getTime(), 0) / amount;\n\n    notes.forEach(note => {\n      if (this.isNoteVisible(note, query)) {\n        this._view.handler.add(note, query);\n      }\n    });\n    this._view.handler.apply(reload);\n\n    return Promise.resolve({\n      amount,\n      average: new Date(average)\n    });\n  }\n\n  /**\n    * Check whether a note can be shown\n    *\n    * @function\n    * @param {Note} note Single note which should be checked.\n    * @param {Query} query The query which was used in order to find the note\n    * @returns {Boolean}\n    */\n  isNoteVisible(note, query) {\n    return (query.data.status === STATUS.OPEN ? note.status === STATUS.OPEN : true) &&\n           (query.data.status === STATUS.CLOSED ? note.status === STATUS.CLOSED : true);\n  }\n\n  /**\n    * Searches for the note with the specified id and returns it\n    *\n    * @function\n    * @param {Number} id\n    * @returns {Note}\n    */\n  get(id) {\n    return this.notes.find(note => note.id === id);\n  }\n\n  /**\n    * Updates a single note with new data\n    *\n    * @function\n    * @param {Number} id\n    * @param {Note} note\n    * @returns {Promise}\n    */\n  update(id, note) {\n    const index = this.notes.findIndex(element => element.id === id);\n    if (index === -1) {\n      throw new Error(`The note with the id ${id} could not be found in the array`);\n    }\n    this.notes[index] = note;\n    return this.reload();\n  }\n\n  /**\n    * Reload the notes because another event happened like a changed filter\n    *\n    * @function\n    * @returns {Promise}\n    */\n  reload() {\n    return this.show(this.notes, this.query, true);\n  }\n}\n"],"names":["template","Handlebars.compile","t","MapView","ListView"],"mappings":"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"}